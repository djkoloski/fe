# Rules
rule linkWholeArchive
  command = link $in $libPaths $libs /OUT:$out /nologo /WX /MACHINE:X64 /SUBSYSTEM:CONSOLE /DEBUG /OPT:REF /OPT:ICF /WHOLEARCHIVE
  description = linkWholeArchive $out
rule codegen
  command = $solutionDir\Bin\Win_x64_Release\CGen\CGen.exe $in $out -I$solutionDir $codegenIncludes -Wall -x c++ -Xclang -DCODEGEN -Wno-pragma-once-outside-header -Wno-unused-private-field -DPLATFORM_WIN_X64 -DCONFIG_RELEASE
  description = codegen $in $out
  restat = true
rule compile
  command = cl /c $in /Fo$out /showIncludes /I $solutionDir\Build\$buildType $includes /nologo /W3 /sdl /WX /EHsc /GR- /fp:fast /vms /DPLATFORM_WIN_X64 /DCONFIG_RELEASE /Z7 /O2
  description = compile $out
  deps = msvc
rule link
  command = link $in $libPaths $libs /OUT:$out /nologo /WX /MACHINE:X64 /SUBSYSTEM:CONSOLE /DEBUG /OPT:REF /OPT:ICF
  description = link $out
rule copy
  command = cmd /c copy $in $out
  description = copy $in $out
  restat = true
rule lib
  command = lib $in /OUT:$out /nologo /WX /MACHINE:X64 /SUBSYSTEM:CONSOLE
  description = lib $out
rule unitTest
  command = $in --run-unit-tests -r xml -o $in.unittests.xml
  description = unit test $in

# Solution variables
solutionDir = ..
buildType = Win_x64_Release
binDir = $solutionDir\Bin\$buildType
extDir = $solutionDir\External

# Project variables
project = CGen
sourceDir = $solutionDir\$project
buildDir = $solutionDir\Build\$buildType\$project

# Compile settings
includes = /I $extDir\LLVM\include
codegenIncludes = -I$extDir\LLVM\include
libPaths = /LIBPATH:$extDir\LLVM\lib
libs = libclang.lib

# Build
build $buildDir\Check.h: copy $sourceDir\Check.h
build $buildDir\Main.obj: compile $sourceDir\Main.cpp || CGen_codegen
build CGen_codegen: phony $buildDir\Check.h
build $binDir\CGen\libclang.dll: copy $extDir\LLVM\bin\libclang.dll
build $binDir\CGen\CGen.exe: link $buildDir\Main.obj | $extDir\LLVM\lib\libclang.lib $binDir\CGen\libclang.dll
build CGen: unitTest $binDir\CGen\CGen.exe
